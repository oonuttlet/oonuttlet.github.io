{
  "hash": "e6ce6ef50304d9edeee81996c3d53cd9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"scooter analysis\"\nauthor: \"Harrison DeFord\"\ndate: '2022-05-05'\noutput: html_document\nexecute: \n  eval: false\n---\n\n\n\n\n\n\n## Setup\n\nThis script relies on 3 geopackage outputs from the previous script. It creates a long dataframe, inclusive of all three vendors, groups them by permanent, unique bike ID, and defines a trip as a movement of 50 meters between timestamps, in an attempt to adjust for GPS variability.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlink_data <- st_read(\"../results/link_mon_am.gpkg\")\nlime_data <- st_read(\"../results/spin_mon_am.gpkg\")\nspin_data <- st_read(\"../results/spin_mon_am.gpkg\")\nscooters_raw = bind_rows(link_data, lime_data, spin_data) %>%\n  st_transform(crs = 3857)\nif(!file.exists(\"../results/scooters_raw.gpkg\")){\n  st_write(scooters_raw, dsn = \"../results/scooters_raw.gpkg\")\n}\n```\n:::\n\n\n\n\nFirst, we'll filter out the disabled bike observations, and split the bikes into their own lists in order to apply a function over each bike.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nscooters_split <- scooters_raw %>%\n  distinct() %>%\n  filter(is_disabled == 0) %>%\n  group_by(vendor, bike_id) %>%\n  group_split()\n```\n:::\n\n\n\n\nThis function defines what constitutes a trip. It is *slow*. When it's done, each list element, representing a scooter, will have a field delineating if a given time-interval was part of a trip.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nscooters_trip <- lapply(scooters_split, function(df){\n  df %>% mutate(dist_prev = units::drop_units(st_distance(geom, lag(geom), by_element = TRUE)),\n                dist_next = units::drop_units(st_distance(geom, lead(geom), by_element = TRUE)),\n                time_id = row_number(), #this is what allows us to order points for QGIS analysis\n                movement_id = paste(bike_id, \"_\", row_number(), sep = \"\"), #perhaps redundant, but easy solution for moving between R and QGIS\n                trip = case_when(\n                  dist_prev > 50 | dist_next > 50 ~ 1, #define trip based on distance column\n                  TRUE ~ 0))\n})\n```\n:::\n\n\n\n\nNote that this is some of the earliest R code I'd ever written. I'm leaving it alone for posterity's sake, but I'm not sure why I split it into groups and re-bound it again.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrip_long <- bind_rows(scooters_trip) %>%\n  filter(trip == 1) #filter by only trip points\ntrip_split <- trip_long %>% #split again by trips\n  group_by(bike_id) %>%\n  group_split()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#trip_split_id <- lapply(trip_split, function(df){\n#  df %>% mutate(time_id = row_number())\n#})\ntrip_id_long <-bind_rows(trip_split) #bind into trips\nif(!file.exists(\"../results/trip_id_long.gpkg\")){\n  st_write(trip_id_long, \"../results/trip_id_long.gpkg\", append = FALSE)\n}\n```\n:::\n",
    "supporting": [
      "scooter_analysis_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}