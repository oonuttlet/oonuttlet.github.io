{
  "hash": "e77d9802bf207bb041eb6166d44cc37c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Micromobility in Baltimore\"\nauthor: \"Harrison DeFord\"\ndate: '2022-05-05'\noutput: html_document\nexecute: \n  eval: false\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nflow_lines_arc <- st_sf(readRDS(\"../results/flow_lines_arc.RDS\"))\nbalt_hex <- st_sf(readRDS(\"../results/balt_hex.RDS\"))\notm_lehd <- st_read(\"../results/otm_5b749ca22bf64d9abe899ef50a619131/points_2019.shp\") %>% st_transform(3857) %>%\n  select(id, c000, geometry)\nscooters_raw <- st_read(\"../results/scooters_raw.gpkg\") %>% filter(is_disabled == 0)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbaltimore_bg_income <- get_acs(geography = \"block group\", \n                           variables = c(\"pop\" = \"B03002_001\", # Total\n                                         \"pop_nhwhite\" = \"B03002_003\", # NH White\n                                         \"pop_nhblack\" = \"B03002_004\", # NH Black\n                                         \"pop_nhamind\" = \"B03002_005\", # NH Am Ind\n                                         \"pop_nhasian\" = \"B03002_006\", # NH Asian\n                                         \"pop_nhhwnpi\" = \"B03002_007\", # NH Hawaiin/PI\n                                         \"pop_nhother\" = \"B03002_008\", # One Other\n                                         \"pop_nhtwomr\" = \"B03002_009\", # Two+\n                                         \"pop_hispltx\" = \"B03002_012\", # Hispanic/Latinx\n                                         \"hu_total\"  = \"B25001_001\", # Housing Units\n                                         \"hu_totocc\" = \"B25003_001\", # Housing Units - Occ\n                                         \"hu_totown\" = \"B25003_002\", # Housing Units - Owner Occ,\n                                         \"hu_totrnt\" = \"B25003_003\", # Housing Units - Renter Occ,\n                                         \"mhhi\" = \"B19013_001\"), #median household income\n                           \n                           year = 2019,\n                           survey = \"acs5\",\n                           state = c(24), \n                           county = c(510), \n                           geometry = TRUE, \n                           output = \"wide\") %>% st_transform(3857)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Computes the NH Asian Population\nbaltimore_bg_income$pop_nhasianXE <- baltimore_bg_income$pop_nhasianE + baltimore_bg_income$pop_nhhwnpiE\n\n# Computes the NH \"Other\" Population\nbaltimore_bg_income$pop_nhotherXE <- baltimore_bg_income$pop_nhamindE + baltimore_bg_income$pop_nhotherE + baltimore_bg_income$pop_nhtwomrE\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nst_erase <- function(x, y) {\n  st_difference(x, st_make_valid(st_union(y)))}\nbmore_water <- area_water(\"MD\", c(510,005), class = \"sf\") %>% st_transform(3857) %>% filter(AWATER > 20000)\nbmore_water <- st_make_valid(st_buffer(bmore_water, 0)) # Fix topology\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbaltimore_bg_income <- baltimore_bg_income %>% st_transform(3857)\nbaltimore_bg_income <- st_erase(baltimore_bg_income, bmore_water)\nbalt_hex <- balt_hex %>% st_transform(3857)\nbalt_bg_emp <- st_join(otm_lehd, balt_hex)\nbalt_bg_emp <- balt_bg_emp %>% group_by(hex_id) %>% summarise(sum_c000 = sum(c000))\nbalt_hex.intersects <- st_intersects(st_union(baltimore_bg_income), balt_hex)\nbalt_hex.subset <- balt_hex[balt_hex.intersects[[1]],]\nbmore_scooters_in_hex <- st_join(balt_hex.subset, scooters_raw)\nbmore_scooter_hex_count <- count(as_tibble(bmore_scooters_in_hex), hex_id)\nbalt_hex.subset <- left_join(balt_hex.subset, bmore_scooter_hex_count)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nar_validate(source = baltimore_bg_income, target = balt_hex.subset, varList = \"popE\", method = \"aw\", verbose = TRUE)\n\nbmore_grid_income <- aw_interpolate(balt_hex.subset, tid = hex_id, source = baltimore_bg_income, sid = \"GEOID\", weight = \"sum\", output = \"sf\", extensive = c(\"popE\",\"hu_totalE\", \"pop_nhwhiteE\"))\nbmore_grid_emp_income <- left_join(bmore_grid_income, st_drop_geometry(balt_bg_emp))\nbmore_grid_emp_income[is.na(bmore_grid_emp_income)] <- 0\nbmore_grid_emp_income <- bmore_grid_emp_income %>% rename(scooter_count = n)%>% mutate(people_pt = popE + sum_c000, scooters_per_pt = (1000*scooter_count/18)/people_pt, pct_bipoc = (popE-pop_nhwhiteE)/popE) %>% filter(people_pt > 10)\nbmore_grid_emp_income[is.na(bmore_grid_emp_income)] <- 0\nbmore_grid_emp_income <- bmore_grid_emp_income %>% st_transform(3857)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbbox_new <- st_bbox(bmore_grid_emp_income) # current bounding box\n\nxrange <- bbox_new$xmax - bbox_new$xmin # range of x values\nyrange <- bbox_new$ymax - bbox_new$ymin # range of y values\n\nbbox_new <- bbox_new %>%  # take the bounding box ...\n  st_as_sfc() # ... and make it a sf polygon\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot.pts <- ggplot()+\n  geom_sf(balt_hex, fill = NA, mapping = aes())+\n  geom_sf(bmore_grid_emp_income, color = NA, mapping = aes(fill = people_pt))+\n  labs(title = \"Total person-points\", fill = \"Person-points\")+\n  geom_sf(st_union(baltimore_bg_income), fill = NA, color = \"black\", size = 0.8, mapping = aes())+\n  scale_fill_viridis_c(breaks = c(0, 20000, 40000))+\n  coord_sf(xlim = st_coordinates(bbox_new)[c(1,2),1], \n           ylim = st_coordinates(bbox_new)[c(2,3),2]) + \n  theme_void()+\n  theme(plot.title = element_text(hjust = 0.5), panel.border = element_rect(color = \"black\", fill = NA), legend.position = \"bottom\", plot.margin = margin(0,5,0,5))\n\nggplot.pct_bipoc <- ggplot()+\n  geom_sf(balt_hex, fill = NA, mapping = aes())+\n  geom_sf(bmore_grid_emp_income, color = NA, mapping = aes(fill = pct_bipoc))+\n  labs(title = \"Percentage of BIPOC residents\", fill = \"% BIPOC\")+\n  geom_sf(st_union(baltimore_bg_income), fill = NA, color = \"black\", size = 0.8, mapping = aes())+\n  scale_fill_viridis_c()+\n  coord_sf(xlim = st_coordinates(bbox_new)[c(1,2),1], \n           ylim = st_coordinates(bbox_new)[c(2,3),2]) + \n  theme_void()+\n  theme(plot.title = element_text(hjust = 0.5), panel.border = element_rect(color = \"black\", fill = NA), legend.position = \"bottom\", plot.margin = margin(0,5,0,5))\n\nggplot.scooters_pt <- ggplot()+\n  geom_sf(balt_hex, fill = NA, mapping = aes())+\n  geom_sf(bmore_grid_emp_income, color = NA, mapping = aes(fill = scooters_per_pt))+\n  labs(title = \"Scooters per 1000 person-points\", fill = \"Scooters per 1000 \\nperson-points\")+\n  geom_sf(st_union(baltimore_bg_income), fill = NA, color = \"black\", size = 0.8, mapping = aes())+\n  scale_fill_viridis_c()+\n  coord_sf(xlim = st_coordinates(bbox_new)[c(1,2),1], \n           ylim = st_coordinates(bbox_new)[c(2,3),2]) + \n  theme_void()+\n  theme(plot.title = element_text(hjust = 0.5), panel.border = element_rect(color = \"black\", fill = NA), legend.position = \"bottom\", plot.margin = margin(0,5,0,5))\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlayout1 <- ggplot.scooters_pt|ggplot.pct_bipoc\nlayout1\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlayout2 <- ggplot.scooters_pt | ggplot.pts\nlayout2\n```\n:::\n",
    "supporting": [
      "scooter_locations_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}